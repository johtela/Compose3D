<#@ assembly name="System.Core" 
#><#@ import namespace="System.Linq" 
#><#@ import namespace="System.Text" 
#><#@ import namespace="System.Collections.Generic" 
#><#+ 
void Sampler(int dim, string pixelType, bool array, bool shadow) 
{ 
	var samplerType = "Sampler" + DimText(dim) + pixelType + ArrayText(array) + ShadowText(shadow);
#>namespace Compose3D.Textures
{
    using Arithmetics;
	using GLTypes;

	[GLType ("<#= pixelType #>sampler<#= DimText(dim) + ArrayText(array) + ShadowText(shadow) #>")]
    public struct <#= samplerType #>
    {
		[GLFunction ("textureSize ({0})")]
<#+		Size(dim, array); #>
	}
}<#+
}

string DimText(int dim)
{
	return dim <= 3 ? dim.ToString() + "D" : "Cube";
}

string ArrayText(bool array)
{
	return array ? "Array" : "";
}

string ShadowText(bool shadow)
{
	return shadow ? "Shadow" : "";
}

void Size(int dim, bool array) 
{ 
	string retType;
	if (dim == 1)
		retType = "int";
	else if (dim >= 2 && dim <= 3)
		retType = "Vec" + (array ? dim + 1 : dim).ToString() + "i";
	else
		retType = "Vec2i";

#>		public <#= retType #> Size (int lod)
		{
			return default (<#= retType #>);
		}<#+ 
} 
#>